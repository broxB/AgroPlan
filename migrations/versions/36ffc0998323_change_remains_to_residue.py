"""change remains to residue

Revision ID: 36ffc0998323
Revises: 893250897dda
Create Date: 2023-01-04 06:58:54.647809

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '36ffc0998323'
down_revision = '893250897dda'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('crop', schema=None) as batch_op:
        batch_op.alter_column("remains", new_column_name="residue")

    with op.batch_alter_table('cultivation', schema=None) as batch_op:
        batch_op.alter_column("remains", new_column_name="residues")
    op.execute("UPDATE cultivation SET residues = REPLACE(residues, 'no_remains', 'no_residues')")
    # ### end Alembic commands ###


def downgrade():
    with op.batch_alter_table('crop', schema=None) as batch_op:
        batch_op.alter_column("residue", new_column_name="remains")

    with op.batch_alter_table('cultivation', schema=None) as batch_op:
        batch_op.alter_column("residues", new_column_name="remains")
    op.execute("UPDATE cultivation SET remains = REPLACE(remains, 'no_residues', 'no_remains')")
    # ### commands auto generated by Alembic - please adjust! ###
    # with op.batch_alter_table('cultivation', schema=None) as batch_op:
        # batch_op.add_column(sa.Column('remains', sa.VARCHAR(length=17), nullable=True))
        # batch_op.drop_column('residues')

    # with op.batch_alter_table('crop', schema=None) as batch_op:
        # batch_op.add_column(sa.Column('remains', sa.BOOLEAN(), nullable=True))
        # batch_op.drop_column('residue')

    # ### end Alembic commands ###
